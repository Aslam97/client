name: Validate

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3.1.0

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.4

      # Cache the local `node_modules` directory.
      - name: Restore npm cache
        id: cache-node-modules
        uses: actions/cache@v3.0.11
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('patches/**') }}-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('patches/**') }}-
            ${{ runner.os }}-build-${{ hashFiles('patches/**') }}-
            ${{ runner.os }}-${{ hashFiles('patches/**') }}-

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Code Linting
        run: bun run --bun lint

  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3.1.0

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.4

      # Cache the local `node_modules` directory.
      - name: Restore npm cache
        id: cache-node-modules
        uses: actions/cache@v3.0.11
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('patches/**') }}-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('patches/**') }}-
            ${{ runner.os }}-build-${{ hashFiles('patches/**') }}-
            ${{ runner.os }}-${{ hashFiles('patches/**') }}-

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Testing
        run: bun test
